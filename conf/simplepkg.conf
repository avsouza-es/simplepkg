#---------------------------------------------------------------------
# Default simplepkg configuration.
# File: /etc/simplepkg/default/simplepkg.conf
#
# This file contains the default behaviour of simplepkg scripts.
# Please do not edit this file. Use /etc/simplepkg/simplepkg.conf
# instead for overriding the default configuration.
#---------------------------------------------------------------------

#---------------------------------------------------------------------
#                        GENERAL SECTION
#---------------------------------------------------------------------
# Default architecture: set this option if you dont want simplepkg
# to use the value from /etc/slackware-version
# DEFAULT_ARCH="i486"

# Default version: set this option if you dont want simplepkg
# to use the value from /etc/slackware-version
# DEFAULT_VERSION="13.0"

# Temporary folder
TMP="/tmp/simplepkg"

# Temporary folder user: use it if you want to bind simplepkg's
# temporary folder to a given user
# TMP_USER=""

# Temporary folder group: use it if you want to bind simplepkg's
# temporary folder to a given group
# TMP_GROUP=""

#---------------------------------------------------------------------
#                   MKBUILD AND CREATEPKG SECTION
#---------------------------------------------------------------------

# Set default directory for mkbuilds
MKBUILDS_DIR="/var/simplepkg/mkbuilds"

# Set SlackBuilds default directory for scripts
SLACKBUILDS_DIR="/var/simplepkg/slackbuilds"

# Set packages default repository directory
PACKAGES_DIR="/var/simplepkg/repos"

# Set mkbuilds svn default repository
MKBUILDS_SVN="https://svn.riouxsvn.com/mkbuilds"

# Set SlackBuilds svn default repository
SLACKBUILDS_SVN="https://svn.riouxsvn.com/slackbuilds"

# Set packages svn default repository
PACKAGES_SVN="https://svn.fluxo.info/packages"

# Set the binaries default repository nested folder, useful if you manage
# packages from different distribution versions and architectures in the
# same parent folder.
#
# You can use any string here and also de special parameters none, distro,
# arch and version. You can also mix more than one parameter, like
# "distro-version".
#
# Default value is "distro/distro-version" and you should change this just
# if you know what are you doing.
PACKAGES_REPOS_STYLE="distro/distro-version"

# Se this to "yes" if you want createpkg to put noarch packages also in
# a noarch/ folder.
PACKAGES_REPOS_NOARCH="on"

# If your packages repository is under svn and you plan to manage it with an
# user different than root, then set this parameter with the username
# owning the repository working copy.
PACKAGES_SVN_USER=""

# Same as the previous option, but for svn repository group.
PACKAGES_SVN_GROUP=""

# If your mkbuild and slackbuild repositories is under svn and you plan to
# manage it with an user different than root, then set this parameter with the
# username owning the repository working copy.
MKBUILDS_SVN_USER=""

# Same as the previous option, but for svn repository group.
MKBUILDS_SVN_GROUP=""

# Set sources default directory
SOURCE_DIR="/var/simplepkg/sources"

# Set SOURCE_DIR folder owner
SOURCE_DIR_USER=""

# Set SOURCE_DIR folder group
SOURCE_DIR_GROUP=""

# Set color style. Possible values are: color,gray, none.
COLOR_MODE="none"

# Createpkg architecture. Use this to force createpkg to a given arch.
# CREATEPKG_ARCH="i486"

# Remove build files
CREATEPKG_CLEANUP="yes"

# Remove old packages from repository tree by createpkg
REMOVE_OLD_PACKAGE="off"

# Move package to SlackBuilds-like tree
MOVE_BIN_PACKAGE="on"

# Move package's slack-required to binary repository
MOVE_SLACK_REQUIRED="on"

# Set this to override the default author on each SlackBuild. Use alphabetic
# characters only and no spaces.
CREATEPKG_AUTHOR=""

# Set this to override de default package compress to tgz, tbz, tlz, txz. The default is tgz
MKBUILD_COMPRESS="tgz"

# Set this to get author information automatically when creating a new mkbuild
MKBUILD_AUTHOR=""

# Set this to get author initials automatically when creating a new mkbuild
MKBUILD_AUTHOR_INITIALS=""

# Whether createpkg should sign packages.
SIGN_PACKAGES="off"

# Username used for package signatures.
SIGN_PACKAGES_USER=""

# GPG key id used for package signature, leave blank to use default key.
SIGN_PACKAGES_KEYID=""

# Whether to use gpg-agent to sign packages
SIGN_PACKAGES_WITH_GPG_AGENT="off"

# Whether mkbuild should sign Manifests.
SIGN_MANIFESTS="off"

# GPG key id used for Manifest signature, leave blank to use default key.
SIGN_MANIFESTS_KEYID=""

# Whether to use gpg-agent to sign Manifests
SIGN_MANIFESTS_WITH_GPG_AGENT="off"

# Whether to just build packages that have Manifest files.
FORCE_MANIFEST_CHECK="off"

# Whether to just build packages that have signed Manifest files.
FORCE_MANIFEST_CHECK_SIGNATURE="off"

#---------------------------------------------------------------------
#                        SIMPLARET SECTION
#---------------------------------------------------------------------

# Whether mkjail should clean the package cache before installation
# to enable it, set to "1" or "yes"
SIMPLARET_CLEAN="1"

# whether mkjail should clean the package cache after the installation;
# to enable it, set to "1" or "yes"
SIMPLARET_DELETE_DOWN="1"

# Whether mkjail should issue a simplaret --update before install the jail;
# to enable it, set to "1" or "yes"
SIMPLARET_UPDATE="1"

# Wheter try to download from the next repository on failed download.
SIMPLARET_DOWNLOAD_FROM_NEXT_REPO="1"

# Wheter delete also patches when simplaret --purge is called;
# to enable it, set to "1" or "yes"
SIMPLARET_PURGE_PATCHES="0"

# Whether delete each package rigth after its installation;
# to enable it, set to "1" or "yes"
SIMPLARET_DELETE_DURING="0"

# Delete packages older than N weeks from the cache
SIMPLARET_PURGE_WEEKS="3"

# Where patches are placed
PATCHES_DIR="/var/simplepkg/patches"

# Place to store your packages
STORAGE="/var/simplepkg/packages"

# Whether to use passive ftp transfers;
# to enable it, set to "1" or "yes"
PASSIVE_FTP="1"

# Http retrieval tool;
# available parameters are "wget" or "curl"
HTTP_TOOL="wget"

# Ftp retrieval tool;
# available parameters are "wget", "curl" or "ncftpget"
FTP_TOOL="wget"

# Set connection timeout in seconds
CONNECT_TIMEOUT="20"

# ROOT repository package priority
ROOT_PRIORITY="patches slackware extra testing pasture"

# REPOS repository package priority
REPOS_PRIORITY="patches slackware extra testing pasture"

# Whether to check package signatures (you should have the repository
# maintainer key on your keyring)
SIGNATURE_CHECKING="on"

# Whether simplaret will try to solve dependencies by looking
# for packages' slack-required
DEPENDENCY_CHECKING="1"

# Enabling this option (i.e, setting to "1" or "yes"), simplaret will
# donwload even already applied patches, a good option when you plan
# to keep local copies of all needed patches for your system
DOWNLOAD_EVEN_APPLIED_PATCHES="0"

# Enabling this option (i.e, setting to "1" or "yes"), simplaret will
# look at your standard repositories for new packages; if it find a
# package with different version of your current installed package and
# also this package isnt in the packages folder, then the new package
# is applied; if in doubt, just say no or leave blank. Otherwise set it
# either to "yes" or "1" and remember that if enabling this feature can
# cause problems if you use more than one REPOS definition for each
# ARCH and VERSION. Also, this option can be very slow.
CONSIDER_ALL_PACKAGES_AS_PATCHES="0"

# Enabling this option (i.e, setting to "1" or "yes"), simplaret will
# store patches it finds on ROOT repositories on
#
#   $PATCHES_DIR/$ARCH/$VERSION/root-$repository_name.
#
# By default this option is turned off because it breaks the standard
# way to store packages and can cause some confusion, but its an useful
# feature if you like to see all patches apart from common packages and/or
# stored in the same tree.
STORE_ROOT_PATCHES_ON_PATCHES_DIR="0"

#---------------------------------------------------------------------
#                        TEMPLATEPKG SECTION
#---------------------------------------------------------------------

# Set to yes if your templates will be placed in a subversion repository
# This just work if TEMPLATE_STORAGE_STYLE is set to own-folder or compact.
TEMPLATES_UNDER_SVN="no"

# Where your templates will be located.
# Dont change it except you know what you're doing.
TEMPLATE_FOLDER="/etc/simplepkg/templates"

# This variable controls in which folder / subfolder your templates will
# be stored. Possible values are:
#
# - simplepkg-folder: templates are stored at /etc/simplepkg
# - templates-folder: templates are stored at /etc/simplepkg/templates
# - own-folder or compact: each template stored at its own folder
#                          at /etc/simplepkg/templates/template-name
#
# This variable has backwards purposes only, so dont change it.
TEMPLATE_STORAGE_STYLE="compact"

#---------------------------------------------------------------------
#                        MKJAIL SECTION
#---------------------------------------------------------------------

# Where jails are placed
JAIL_ROOT="/vservers"

# Wheter mkjail should add new jails in the jail list;
# to enable it, set to "1" or "yes"
ADD_TO_JAIL_LIST="1"
